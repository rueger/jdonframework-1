feature-01: 增加用户编辑时的删除图片功能

1、需求变化
   1.1 git变化：
       git checkout -b develop
       git checkout -b feature-01
       说明：增加用户编辑时的删除图片功能将在feature-01分支进行，完成时再合并到develop分支（git checkout develop git merge --no-ff feature-x），
             删除feature-01分支，
             再合并到master分支中。
   1.2 需求变化前的现状：
       在用户EDIT （http://localhost:8080/jdonmvc_cqrs_es-1.0/user/3）中的图片能显示，不能删除
   1.3 需求变化后的要求：
       增加一个图片的删除功能，点击可以删除图片包括数据库中的图片  

2、REST变化
        @Path("/showUpload/{user.userId}")
	@DELETE
	public Represent deleteUpload(UserModel user) {
		UserModel oldUser = this.getUser(user.getUserId());
		
		oldUser.getAttachment().setUploadFile(null);
		oldUser.getAttachment().picSetNull();
		
		oldUser.es.deleteUpload(new UploadDeletedEvent(user.getUserId()));
		return new State("/result.jsp");
	}

3、领域变化
         public class Attachment
         public void picSetNull() {
		uploadFile = null;
		noProfilepic = true;
	 }

4、事件变化
   4.1 事件消息  : 增加了一个public class UploadDeletedEvent
   4.2 事件发生器：public class EventSourcing   +	@Send("deleteUpload")
   4.3 事件处理器：public class UploadFileHandler +	@OnEvent("deleteUpload")
5、仓储变化
   无变化

6、界面变化
   eidtUser.jep中增加如下：
    <form action="${pageContext.request.contextPath}/showUpload/${user.userId}" method="post">
        <input type="hidden" name="_method" value="DELETE" />
         <c:if test="${not empty  user.uploadFile}">
         	  pic :<img src="<%=request.getContextPath() %>/showUpload?pid=${user.userId}"  border='0'/>	
         </c:if>
        <input type="submit" value="删除图片" />
    </form>
    
=============================================================================================================================
fixbug-01:   saveUpload(UploadVO event) 变成了 save(UploadFile uploadFile)

bug起源：   
   
   @Send("saveUpload")
   public DomainMessage saveUpload(UploadVO event) {
     return new DomainMessage(event);
   }
   
   @OnEvent("saveUpload")
   public void save(UploadFile uploadFile) {
     uploadRepository.deleteUploadFile(uploadFile.getParentId());
     uploadRepository.createUploadFile(uploadFile);
   }

   详见：http://www.jdon.com/47656
   
bug修复：

   git checkout -b fixbug-01，修复将在分支fixbug-01上进行


   1、REST变化
    		UserModel oldUser = this.getUser(user.getUserId());
 		FormFile file = (FormFile) request.getSession().getAttribute("formFile");
-		UploadVO uploadVO = null;
+		//UploadVO uploadVO = null;
+		//if (file != null) {
+		//	uploadVO = new UploadVO(file.getFileName(), file.getFileData(), file.getContentType());
+		//}
+		UploadFile uploadFile = new UploadFile();
 		if (file != null) {
-			uploadVO = new UploadVO(file.getFileName(), file.getFileData(), file.getContentType());
+			uploadFile.setParentId(oldUser.getUserId());
+			uploadFile.setData(file.getFileData());
+			uploadFile.setName(file.getFileName());
+			uploadFile.setContentType(file.getContentType());
+			uploadFile.setDescription(file.getFileName() + " description");
+			uploadFile.setSize(file.getFileSize());
+			
 		}
 
-		commandHandler.saveUser(oldUser, new UpdateCommand(user, uploadVO));
+		commandHandler.saveUser(oldUser, new UpdateCommand(user, uploadFile));
 		return new State("/result.jsp");
 	}
 	   
   2、领域变化
   2.1
   public void setUploadFile(UploadFile event) {
 		es.saveUpload(event);

 		getAttachment().setUploadFile(event);
   }
   
   2.2
   public class UpdateCommand {
     private final UserModel newUserDTO;
     private final UploadFile uploadFile;
      
   3、事件变化
   3.1 事件发送器
   @Send("saveUpload")
-	public DomainMessage saveUpload(UploadVO event) {
+	public DomainMessage saveUpload(UploadFile event) {
 		return new DomainMessage(event);
 	}
   
   4、仓储变化
   无变化
   
   5、界面变化
   editUser.jsp
   +        <a href="${pageContext.request.contextPath}/single_upload.jsp" target="_blank">更换图片</a>
   

================================================================================================================ 	
feature-02: 持久层换用ibatis
总结：
使用Annotation的方式比使用XML方式的更简单也更安全。
使用DDD方式，用model in memory，用懒加载Laziness加载子对象，SQL语句不会复杂的多表链接的方式。






================================================================================================================
feature-03: 加入安全框架，首先考虑用Shiro Security

添加安全权限功能将在feature-03分支上进行

use case
1、匿名用户转到登录页面
2、管理员登录后可以新增用户，删除用户和图片，修改用户及图片
3、普通用户登录后可以删除用户和图片，修改用户及图片
   
   
   