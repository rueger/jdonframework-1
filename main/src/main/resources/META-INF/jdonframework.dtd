<?xml version="1.0" encoding="UTF-8" ?>

<!-- qucik configuration manual:    http://www.jdon.com/jdonframework/threemin.htm 
     english version: https://jdon.dev.java.net/steps.html -->

<!--
there are two base elements: models and services.
this is like struts-config.xml : form-beans and actions
-->
<!ELEMENT app (models?, services?)>

<!--
there are many models. such as Product Model...
-->
<!ELEMENT models (model*)>

<!--
there are two kinds of servics:
ejbService is ejb implemention.
pojoService is pojo javaBeans,  business component.
component is same as pojoservice, business component.
-->
<!ELEMENT services (ejbService|pojoService|component)* >

<!--
need the class name for pojoService.
-->
<!ELEMENT pojoService  (constructor*)>
<!ATTLIST pojoService name CDATA #REQUIRED >
<!ATTLIST pojoService class CDATA #REQUIRED >
<!ELEMENT constructor EMPTY >
<!ATTLIST constructor value CDATA #REQUIRED >

<!-- component is equal to pojoService, just it is a different name -->
<!ELEMENT component  (constructor*)>
<!ATTLIST component name CDATA #REQUIRED >
<!ATTLIST component class CDATA #REQUIRED >
<!ATTLIST constructor value CDATA #REQUIRED >


<!--
ejbService need EJB JNDI Name, the class name of local EJB interface
or the class name of remote EJB interface.
-->
<!ELEMENT ejbService ( jndi|ejbLocalObject|ejbHomeObject|ejbRemoteObject|interface?) >
<!--
  name is the unique string among all web application scope
-->
<!ATTLIST ejbService name CDATA #REQUIRED >

<!ELEMENT ejbLocalObject EMPTY >
<!ATTLIST ejbLocalObject class CDATA #REQUIRED >

<!ELEMENT ejbRemoteObject EMPTY >
<!ATTLIST ejbRemoteObject class CDATA #REQUIRED >

<!ELEMENT jndi EMPTY >
<!ATTLIST jndi name CDATA #REQUIRED >

<!--
	the interface is a pojo interface, the bean must
	implements this interface, so , the sesssion bean
	can be cast to the interface.
 -->
<!ELEMENT interface EMPTY >
<!ATTLIST interface class CDATA #REQUIRED >

<!--
in model configure. there are two elements:
acitonForm name and Handler
acitonForm name is the name of struts form-bean's name;
Handler  have two kind of implemention:
1. handler code, such as ProductHandler extends ModelHandler
2. handler confiure.

-->
<!ELEMENT model ( actionForm, handler ) >
<!--
generally, one model is for one a database table.
we suggest all tabls must have one unique ID,
so this key is the name of the table's primary key.
-->
<!ATTLIST model key CDATA #REQUIRED >
<!--
this is the class name of the model
-->
<!ATTLIST model class CDATA #REQUIRED >

<!--
JdomFramework now is base on Struts, Struts is  MVC function
of a J2EE system , so here actionForm is the name of ActionForm
(form-beans name in struts-config.xml)
-->
<!ELEMENT actionForm EMPTY >
<!ATTLIST actionForm name CDATA #REQUIRED >

<!--
Handler  have two kind of implemention:
1. handler code, such as ProductHandler extends ModelHandler
2. handler configure.
you must choose one between them.
-->
<!ELEMENT handler (service?|CDATA) >

<!--
if you choose first implemention, here, must have the class
name of handler code, such as xx.xxx.ProductHandler.
-->
<!ATTLIST handler class CDATA #IMPLIED >


<!--
this is the implemention of handler configure.
Handler have two kind of implemention, you must choose one!
if you choose handler configure implemention,
you must complete these configures as below:
-->
<!ELEMENT service (initMethod?, getMethod?, createMethod?, updateMethod?, deleteMethod? ) >
<!--
this is reference name , that is the name of service: ejbService
or POJOService that defined in service phase configure.
-->
<!ATTLIST service ref CDATA #REQUIRED>

<!--
this is the create method name of service interface
-->
<!ELEMENT initMethod EMPTY >
<!ATTLIST initMethod name CDATA #REQUIRED>

<!--
this is the delete method name of service interface
-->
<!ELEMENT deleteMethod EMPTY >
<!ATTLIST deleteMethod name CDATA #REQUIRED >

<!--
this is the create method name of service interface
-->
<!ELEMENT createMethod EMPTY >
<!ATTLIST createMethod name CDATA #REQUIRED >

<!--
this is the update method name of service interface
-->
<!ELEMENT updateMethod EMPTY >
<!ATTLIST updateMethod name CDATA #REQUIRED >

<!--
this is the query method name of service interface
the method of fecth a model that exsited in persistence;
-->
<!ELEMENT getMethod EMPTY >
<!ATTLIST getMethod name CDATA #REQUIRED >





